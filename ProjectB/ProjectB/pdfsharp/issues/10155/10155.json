{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "With PDFsharp 1.50 beta 2, available on NuGet, you can now use BASE64 encoded images with MigraDoc.\n\nSee also:\nhttp://pdfsharp.net/wiki/MigraDoc_FilelessImages.ashx",
    "ClosedDate": "2015-10-15T04:48:00.303-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "Today only image paths are allowed, we would like Image Stream support. \nÂ \n(We are willing to implement this our selfs but we guess there isn't support in the DDL for it? Could this be implemented using base64 encoding maybe? just write the whole bitstream using base64 encoding, instead of the filepath? concerning caching maybe one could do checksum checks? )",
    "LastUpdatedDate": "2015-10-15T04:48:00.963-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "pdfsharp",
    "ReportedDate": "2010-02-04T04:58:45.707-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Fixed"
    },
    "Summary": "Allow Image streams in MigraDoc",
    "Type": {
      "Name": "Feature",
      "Id": 1
    },
    "VoteCount": 16,
    "Id": 10155
  },
  "FileAttachments": [
    {
      "FileId": 4734,
      "FileName": "uri_imgs.patch",
      "DownloadUrl": ".\\4734"
    }
  ],
  "Comments": [
    {
      "Message": "Any progress on this feature? I would really like to see this feature as I need to render some microsoft charts into a pdf.\r\n\r\nwvd_vegt",
      "PostedDate": "2012-02-22T12:44:25.62-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2012-03-26T07:26:57.513-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2012-05-01T03:52:10.9-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2012-08-22T10:21:47.573-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2012-10-05T08:19:39.46-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2012-12-05T07:46:10.39-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T17:12:07.163-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-04-24T07:27:20.59-07:00",
      "Id": -2147483648
    },
    {
      "Message": "This generalises easily to adding support for URIs rather than just file paths. Once that's done all that you require is support for data: URIs and you can indeed embed the stream using base64 encoding.\r\n\r\nThe attached patch is slightly incomplete because it doesn't add the two new files to all of the .csproj files, only the WPF one, and it doesn't include tests, but otherwise I think it's usable.",
      "PostedDate": "2013-04-24T07:27:22.957-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-08-20T13:05:54.293-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2014-03-14T07:40:44.303-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2014-06-23T02:40:01.29-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2014-06-30T12:31:54.597-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2014-09-16T02:43:53.303-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2015-10-15T04:48:00.303-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2015-10-15T04:48:00.963-07:00",
      "Id": -2147483648
    }
  ]
}